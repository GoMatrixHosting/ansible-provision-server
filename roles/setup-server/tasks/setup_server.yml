
- name: Change server locale
  delegate_to: "{{ server_ip_final }}"
  shell: update-locale LANG="C.UTF-8"

- name: Update repositories and all packages on target machine
  delegate_to: "{{ server_ip_final }}"
  apt:
    name: "*"
    update_cache: yes

- name: Install necessary utils on target machine
  delegate_to: "{{ server_ip_final }}"
  apt:
    pkg:
     - ansible
     - etckeeper
     - git
     - openssl
     - prometheus-node-exporter
     - unattended-upgrades
     - apt-listchanges

- name: Configure unattended-upgrades 1
  delegate_to: "{{ server_ip_final }}"
  lineinfile:
    path: /etc/apt/apt.conf.d/50unattended-upgrades
    regexp: '^\/\/      "origin=Debian,codename=\$\{distro_codename}-updates\";$'
    line: '        "origin=Debian,codename=${distro_codename}-updates";'
    owner: root
    group: root
    mode: '0644'

- name: Configure unattended-upgrades 2
  delegate_to: "{{ server_ip_final }}"
  lineinfile:
    path: /etc/apt/apt.conf.d/50unattended-upgrades
    regexp: '^\/\/      "origin=Debian,codename=\$\{distro_codename}-proposed-updates\";$'
    line: '        "origin=Debian,codename=${distro_codename}-proposed-updates";'
    owner: root
    group: root
    mode: '0644'

- name: Configure unattended-upgrades 3
  delegate_to: "{{ server_ip_final }}"
  lineinfile:
    path: /etc/apt/apt.conf.d/50unattended-upgrades
    regexp: '^\/\/      "o=Debian Backports,a=\$\{distro_codename}-backports,l=Debian Backports";$'
    line: '        "o=Debian Backports,a=${distro_codename}-backports,l=Debian Backports";'
    owner: root
    group: root
    mode: '0644'

- name: Create swapfile with the right permissions
  delegate_to: "{{ server_ip_final }}"
  command: 'fallocate -l {{ swap_size }} /swapfile'
  register: swapfile_new
  args:
    creates: /swapfile
    
- name: Set correct permissions on swapfile
  delegate_to: "{{ server_ip_final }}"
  command: 'chmod 600 /swapfile'
  when: swapfile_new.delta is defined

- name: Make swapfile
  delegate_to: "{{ server_ip_final }}"
  command: 'mkswap /swapfile'
  when: swapfile_new.delta is defined
  
- name: Make swapfile
  delegate_to: "{{ server_ip_final }}"
  command: 'swapon /swapfile'
  when: swapfile_new.delta is defined

- name: Make swapfile permanent in /etc/fstab
  delegate_to: "{{ server_ip_final }}"
  mount: name=none
         src=/swapfile
         fstype=swap
         opts=sw
         passno=0
         dump=0
         state=present

- name: Set swappiness to 20
  delegate_to: "{{ server_ip_final }}"
  shell: sysctl vm.swappiness=20

- name: Set swappiness to 20 on reboot
  delegate_to: "{{ server_ip_final }}"
  lineinfile:
    path: /etc/sysctl.conf
    line: vm.swappiness=20
    owner: root
    group: root
    mode: '0644'

- name: Examine if docker is already installed
  delegate_to: "{{ server_ip_final }}"
  shell: apt list docker-ce
  register: docker_installed

# Docker logs pruning, only applied if docker is already installed

- name: Ensure docker config folder exists
  delegate_to: "{{ server_ip_final }}"
  file:
    path: '/etc/docker/'
    owner: root
    group: root
    mode: '0755'
    state: directory
  when: '"installed" in docker_installed.stdout'

- name: Save docker config file, template
  delegate_to: "{{ server_ip_final }}"
  template:
    src: '{{ role_path }}/templates/daemon.json.j2'
    dest: '/etc/docker/daemon.json'
  when: '"installed" in docker_installed.stdout'

- name: Creates a crontab entry for trimming systemd logs
  delegate_to: "{{ server_ip_final }}"
  cron:
    name: "Trim Systemd Logs"
    user: root
    special_time: daily
    job: "sudo journalctl --vacuum-time=28d"
