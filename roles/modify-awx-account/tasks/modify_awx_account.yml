
- name: Save new 'Provision Server' survey.json to the AWX tower, template
  delegate_to: 127.0.0.1
  template:
    src: './roles/modify-awx-account/surveys/provision_survey_digitalocean.json.j2'
    dest: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/provision_survey_digitalocean.json'
  when: subscription_type == "digitalocean"

- name: Copy provision_survey_digitalocean.json survey file to target
  delegate_to: "{{ server_ip_final }}"
  copy:
    src: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/provision_survey_digitalocean.json'
    dest: /matrix/awx/provision_survey_digitalocean.json
    mode: '0644'
  when: subscription_type == "digitalocean"

- name: Create 'Provision a New Server' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_job_template:
    name: "0 - {{ subscription_id }} - Provision a New Server"
    description: "Creates digitalocean droplet and space, performs initial setup, adds relevant playbooks to users account."
    extra_vars: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.json') }}"
    job_type: run
    inventory: "{{ member_id }}"
    project: "{{ member_id }} - Ansible Provision Server"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: true
    survey_spec: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/provision_survey_digitalocean.json') }}"
    state: present
    verbosity: 1
    job_tags: imposter-check, setup-firewall, setup-mailgun, setup-export, setup-backup
    skip_tags: digitalocean-space
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes
  when: subscription_type == "digitalocean"

- name: Save new 'Provision Server' survey.json to the AWX tower, template
  delegate_to: 127.0.0.1
  template:
    src: './roles/modify-awx-account/surveys/provision_survey_on-premises.json.j2'
    dest: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/provision_survey_on-premises.json'
  when: subscription_type == "on_premises"

- name: Copy provision_survey_on-premises.json survey file to target
  delegate_to: "{{ server_ip_final }}"
  copy:
    src: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/provision_survey_on-premises.json'
    dest: /matrix/awx/provision_survey_on-premises.json
    mode: '0644'
  when: subscription_type == "on_premises"

- name: Create 'Provision a New Server' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_job_template:
    name: "0 - {{ subscription_id }} - Provision a New Server"
    description: "Connects existing server, performs initial setup, adds relevant playbooks to users account."
    extra_vars: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.json') }}"
    job_type: run
    inventory: "{{ member_id }}"
    project: "{{ member_id }} - Ansible Provision Server"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: true
    survey_spec: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/provision_survey_on-premises.json') }}"
    state: present
    verbosity: 1
    job_tags: imposter-check, setup-firewall, setup-mailgun, setup-export, setup-backup
    skip_tags: digitalocean-space, digitalocean-droplet
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes
  when: subscription_type == "on_premises"

- name: Disallow team from executing the 'Provision a New Server' job_template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "0 - {{ subscription_id }} - Provision a New Server"
    role: execute
    state: absent
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes
  ignore_errors: yes

- name: Allow team to view the new 'Provision a New Server' job_template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "0 - {{ subscription_id }} - Provision a New Server"
    role: read
    state: present
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes
  ignore_errors: yes

- name: Create 'Deploy/Update a Server' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 0 - Deploy/Update a Server"
    description: "Creates a new matrix service with Spantaleev's playbooks"
    extra_vars: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.json') }}"
    job_type: run
    job_tags: "setup-all,start"
    inventory: "{{ member_id }}"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    state: present
    verbosity: 1
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Allow team to use 'Deploy/Update a Server' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Deploy/Update a Server"
    role: execute
    state: present
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Create 'Export Server' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 0 - Export Server"
    description: "Export a copy of the server. This copy is available by SFTP and will be deleted 24 hours after being generated."
    extra_vars: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.json') }}"
    job_type: run
    job_tags: "export-server"
    inventory: "{{ member_id }}"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    state: present
    verbosity: 1
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes
    
- name: Allow team to use 'Export Server' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Export Server"
    role: execute
    state: present
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Create 'Self-Check' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 0 - Self-Check"
    description: "Perform basic diagnostics on the matrix server."
    extra_vars: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.json') }}"
    job_type: run
    job_tags: "self-check"
    inventory: "{{ member_id }}"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    state: present
    verbosity: 1
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes
    
- name: Allow team to use 'Self-Check' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Self-Check"
    role: execute
    state: present
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Create 'Start/Restart all Services' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 0 - Start/Restart all Services"
    description: "Starts or restarts all services on the server."
    extra_vars: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.json') }}"
    job_type: run
    job_tags: "start"
    inventory: "{{ member_id }}"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    state: present
    verbosity: 1
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Allow team to use 'Start/Restart all Services' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Start/Restart all Services"
    role: execute
    state: present
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Create 'Stop all Services' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 0 - Stop all Services"
    description: "Stops all services on the server."
    extra_vars: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.json') }}"
    job_type: run
    job_tags: "stop"
    inventory: "{{ member_id }}"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    state: present
    verbosity: 1
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Allow team to use 'Stop all Services' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Stop all Services"
    role: execute
    state: present
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes
    
- name: Save new 'Backup Server' survey.json to the AWX tower, template
  delegate_to: 127.0.0.1
  template:
    src: './roles/modify-awx-account/surveys/backup_server.json.j2'
    dest: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/backup_server.json'
  when: backup_server_enabled|bool

- name: Copy 'Backup Server' survey.json to target
  delegate_to: "{{ server_ip_final }}"
  copy:
    src: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/backup_server.json'
    dest: /matrix/awx/backup_server.json
    mode: '0660'
  when: backup_server_enabled|bool

- name: Create 'Backup Server' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 0 - Backup Server"
    description: "Performs a backup of the entire service to a remote location."
    extra_vars: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.json') }}"
    job_type: run
    job_tags: "backup-server,use-survey"
    inventory: "{{ member_id }}"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: true
    survey_spec: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/backup_server.json') }}"
    state: present
    verbosity: 1
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes
  when: backup_server_enabled|bool

- name: Allow team to use 'Backup Server' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 0 - Backup Server"
    role: execute
    state: present
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes
  when: backup_server_enabled|bool

- name: Save new 'Configure Element' survey.json to the AWX tower, template
  delegate_to: 127.0.0.1
  template:
    src: './roles/modify-awx-account/surveys/configure_element.json.j2'
    dest: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_element.json'

- name: Copy 'Configure Element' survey.json to target
  delegate_to: "{{ server_ip_final }}"
  copy:
    src: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_element.json'
    dest: /matrix/awx/configure_element.json
    mode: '0660'

- name: Create 'Configure Element' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 1 - Configure Element"
    description: "Configure Element web client, Element is the most developed Matrix client software."
    extra_vars: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.json') }}"
    job_type: run
    job_tags: "start,setup-client-element"
    inventory: "{{ member_id }}"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: true
    survey_spec: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_element.json') }}"
    state: present
    verbosity: 1
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Allow team to use 'Configure Element' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 1 - Configure Element"
    role: execute
    state: present
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Save new 'Configure Element Subdomain' survey.json to the AWX tower, template
  delegate_to: 127.0.0.1
  template:
    src: './roles/modify-awx-account/surveys/configure_element_subdomain.json.j2'
    dest: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_element_subdomain.json'

- name: Copy 'Configure Element Subdomain' survey.json to target
  delegate_to: "{{ server_ip_final }}"
  copy:
    src: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_element_subdomain.json'
    dest: /matrix/awx/configure_element_subdomain.json
    mode: '0660'

- name: Create 'Configure Element Subdomain' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 1 - Configure Element Subdomain"
    description: "Configure Element clients subdomain location. (Eg: 'element' for element.example.org)"
    extra_vars: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.json') }}"
    job_type: run
    job_tags: "start,setup-all,setup-client-element-subdomain"
    inventory: "{{ member_id }}"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: true
    survey_spec: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_element_subdomain.json') }}"
    state: present
    verbosity: 1
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Allow team to use 'Configure Element Subdomain' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 1 - Configure Element Subdomain"
    role: execute
    state: present
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Save new 'Configure Email Relay' survey.json to the AWX tower, template
  delegate_to: 127.0.0.1
  template:
    src: './roles/modify-awx-account/surveys/configure_email_relay.json.j2'
    dest: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_email_relay.json'

- name: Copy 'Configure Email Relay' survey.json to target
  delegate_to: "{{ server_ip_final }}"
  copy:
    src: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_email_relay.json'
    dest: /matrix/awx/configure_email_relay.json
    mode: '0660'

- name: Create 'Configure Email Relay' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 1 - Configure Email Relay"
    description: "Enable MailGun relay to increase verification email reliability."
    extra_vars: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.json') }}"
    job_type: run
    job_tags: "start,setup-mailer"
    inventory: "{{ member_id }}"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: true
    survey_spec: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_email_relay.json') }}"
    state: present
    verbosity: 1
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Allow team to use 'Configure Email Relay' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 1 - Configure Email Relay"
    role: execute
    state: present
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Save new 'Configure Synapse' survey.json to the AWX tower, template
  delegate_to: 127.0.0.1
  template:
    src: './roles/modify-awx-account/surveys/configure_synapse.json.j2'
    dest: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_synapse.json'

- name: Copy 'Configure Synapse' survey.json to target
  delegate_to: "{{ server_ip_final }}"
  copy:
    src: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_synapse.json'
    dest: /matrix/awx/configure_synapse.json
    mode: '0660'

- name: Create 'Configure Synapse' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 1 - Configure Synapse"
    description: "Configure Synapse settings. Synapse is the homeserver software that powers your Matrix instance."
    extra_vars: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.json') }}"
    job_type: run
    job_tags: "start,setup-synapse"
    inventory: "{{ member_id }}"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: true
    survey_spec: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_synapse.json') }}"
    state: present
    verbosity: 1
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Allow team to use 'Configure Synapse' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 1 - Configure Synapse"
    role: execute
    state: present
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Save new 'Configure Jitsi' survey.json to the AWX tower, template
  delegate_to: 127.0.0.1
  template:
    src: './roles/modify-awx-account/surveys/configure_jitsi.json.j2'
    dest: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_jitsi.json'

- name: Copy 'Configure Jitsi' survey.json to target
  delegate_to: "{{ server_ip_final }}"
  copy:
    src: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_jitsi.json'
    dest: /matrix/awx/configure_jitsi.json
    mode: '0660'

- name: Create 'Configure Jitsi' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 1 - Configure Jitsi"
    description: "Configure Jitsi conferencing settings."
    extra_vars: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.json') }}"
    job_type: run
    job_tags: "start,setup-jitsi"
    inventory: "{{ member_id }}"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: true
    survey_spec: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_jitsi.json') }}"
    state: present
    verbosity: 1
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Allow team to use 'Configure Jitsi' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 1 - Configure Jitsi"
    role: execute
    state: present
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Save new 'Configure ma1sd (Advanced)' survey.json to the AWX tower, template
  delegate_to: 127.0.0.1
  template:
    src: './roles/modify-awx-account/surveys/configure_ma1sd.json.j2'
    dest: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_ma1sd.json'

- name: Copy 'Configure ma1sd (Advanced)' survey.json to target
  delegate_to: "{{ server_ip_final }}"
  copy:
    src: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_ma1sd.json'
    dest: /matrix/awx/configure_ma1sd.json
    mode: '0660'

- name: Create 'Configure ma1sd (Advanced)' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 1 - Configure ma1sd (Advanced)"
    description: "Configure ma1sd settings, ma1sd is a self-hosted identity server for Matrix."
    extra_vars: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.json') }}"
    job_type: run
    job_tags: "start,setup-ma1sd"
    inventory: "{{ member_id }}"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: true
    survey_spec: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_ma1sd.json') }}"
    state: present
    verbosity: 1
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Allow team to use 'Configure ma1sd (Advanced)' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 1 - Configure ma1sd (Advanced)"
    role: execute
    state: present
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Save new 'Configure Website + Access Export' survey.json to the AWX tower, template
  delegate_to: 127.0.0.1
  template:
    src: './roles/modify-awx-account/surveys/configure_website_access_export.json.j2'
    dest: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_website_access_export.json'
  when: base_domain_used == 'false'
  
- name: Remove 'Configure Website + Access Export' survey.json from the AWX tower
  delegate_to: 127.0.0.1
  file:
    path: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_website_access_export.json'
    state: absent
  when: base_domain_used == 'true'

- name: Copy 'Configure Website + Access Export' survey.json to target
  delegate_to: "{{ server_ip_final }}"
  copy:
    src: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_website_access_export.json'
    dest: /matrix/awx/configure_website_access_export.json
    mode: '0660'
  when: base_domain_used == 'false'

- name: Remove 'Configure Website + Access Export' survey.json from the target
  delegate_to: "{{ server_ip_final }}"
  file:
    path: '/matrix/awx/configure_website_access_export.json'
    state: absent
  when: base_domain_used == 'true'

- name: Create 'Configure Website + Access Export' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 1 - Configure Website + Access Export"
    description: "Configure base domain website settings and access the services export."
    extra_vars: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.json') }}"
    job_type: run
    job_tags: "start,setup-nginx-proxy"
    inventory: "{{ member_id }}"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: true
    survey_spec: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_website_access_export.json') }}"
    state: present
    verbosity: 1
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes
  when: base_domain_used == 'false'
  
- name: Remove 'Configure Website + Access Export' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 1 - Configure Website + Access Export"
    job_type: run
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    state: absent
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes
  when: base_domain_used == 'true'

- name: Allow team to use 'Configure Website + Access Export' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 1 - Configure Website + Access Export"
    role: execute
    state: present
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes
  when: base_domain_used == 'false'

- name: Save new 'Access Export' survey.json to the AWX tower, template
  delegate_to: 127.0.0.1
  template:
    src: './roles/modify-awx-account/surveys/access_export.json.j2'
    dest: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/access_export.json'
  when: base_domain_used == 'true'

- name: Remove 'Access Export' survey.json from the AWX tower
  delegate_to: 127.0.0.1
  file:
    path: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/access_export.json'
    state: absent
  when: base_domain_used == 'false'

- name: Copy 'Access Export' survey.json to target
  delegate_to: "{{ server_ip_final }}"
  copy:
    src: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/access_export.json'
    dest: /matrix/awx/access_export.json
    mode: '0660'
  when: base_domain_used == 'true'

- name: Remove 'Access Export' survey.json from the target
  delegate_to: "{{ server_ip_final }}"
  file:
    path: '/matrix/awx/access_export.json'
    state: absent
  when: base_domain_used == 'false'

- name: Create 'Access Export' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 1 - Access Export"
    description: "Access the services export."
    extra_vars: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.json') }}"
    job_type: run
    job_tags: "start,setup-nginx-proxy"
    inventory: "{{ member_id }}"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: true
    survey_spec: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/access_export.json') }}"
    state: present
    verbosity: 1
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes
  when: base_domain_used == 'true'

- name: Remove 'Access Export' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 1 - Access Export"
    job_type: run
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    state: absent
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes
  when: base_domain_used == 'false'

- name: Allow team to use 'Access Export' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 1 - Access Export"
    role: execute
    state: present
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes
  when: base_domain_used == 'true'

- name: Save new 'Configure Synapse Admin' survey.json to the AWX tower, template
  delegate_to: 127.0.0.1
  template:
    src: './roles/modify-awx-account/surveys/configure_synapse_admin.json.j2'
    dest: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_synapse_admin.json'

- name: Copy 'Configure Synapse Admin' survey.json to target
  delegate_to: "{{ server_ip_final }}"
  copy:
    src: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_synapse_admin.json'
    dest: /matrix/awx/configure_synapse_admin.json
    mode: '0660'

- name: Create 'Configure Synapse Admin' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 1 - Configure Synapse Admin"
    description: "Configure 'Synapse Admin', a moderation tool to help you manage your server."
    extra_vars: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.json') }}"
    job_type: run
    job_tags: "start,setup-synapse-admin"
    inventory: "{{ member_id }}"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: true
    survey_spec: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_synapse_admin.json') }}"
    state: present
    verbosity: 1
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Allow team to use 'Configure Synapse Admin' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 1 - Configure Synapse Admin"
    role: execute
    state: present
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Save new 'Configure Corporal (Advanced)' survey.json to the AWX tower, template
  delegate_to: 127.0.0.1
  template:
    src: './roles/modify-awx-account/surveys/configure_corporal.json.j2'
    dest: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_corporal.json'

- name: Copy 'Configure Corporal (Advanced)' survey.json to target
  delegate_to: "{{ server_ip_final }}"
  copy:
    src: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_corporal.json'
    dest: /matrix/awx/configure_corporal.json
    mode: '0660'

- name: Create 'Configure Corporal (Advanced)' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 1 - Configure Corporal (Advanced)"
    description: "Configure Matrix Corporal, a tool that manages your Matrix server according to a configuration policy."
    extra_vars: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.json') }}"
    job_type: run
    job_tags: "start,setup-corporal"
    inventory: "{{ member_id }}"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: true
    survey_spec: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_corporal.json') }}"
    state: present
    verbosity: 1
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Allow team to use 'Configure Corporal (Advanced)' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 1 - Configure Corporal (Advanced)"
    role: execute
    state: present
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Save new 'Configure Dimension' survey.json to the AWX tower, template
  delegate_to: 127.0.0.1
  template:
    src: './roles/modify-awx-account/surveys/configure_dimension.json.j2'
    dest: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_dimension.json'

- name: Copy 'Configure Dimension' survey.json to target
  delegate_to: "{{ server_ip_final }}"
  copy:
    src: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_dimension.json'
    dest: /matrix/awx/configure_dimension.json
    mode: '0660'

- name: Create 'Configure Dimension' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 1 - Configure Dimension"
    description: "Configure Dimension, the self-hosted integrations server."
    extra_vars: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.json') }}"
    job_type: run
    job_tags: "start,setup-all,setup-dimension"
    inventory: "{{ member_id }}"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: true
    survey_spec: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_dimension.json') }}"
    state: present
    verbosity: 1
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Allow team to use 'Configure Dimension' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 1 - Configure Dimension"
    role: execute
    state: present
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Save initial 'Create User' survey.json to the AWX tower
  delegate_to: 127.0.0.1
  copy:
    src: './roles/modify-awx-account/surveys/create_user.json'
    dest: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/create_user.json'
    mode: '0660'

- name: Create 'Create User' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 2 - Create User"
    description: "Create a new user account and choose if it has admin access."
    extra_vars: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.json') }}"
    job_type: run
    job_tags: "create-user"
    inventory: "{{ member_id }}"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: true
    survey_spec: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/create_user.json') }}"
    state: present
    verbosity: 1
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Allow team to use 'Create User' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 2 - Create User"
    role: execute
    state: present
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes
    
- name: Save initial 'Purge Media (Advanced)' survey.json to the AWX tower
  delegate_to: 127.0.0.1
  copy:
    src: './roles/modify-awx-account/surveys/purge_media.json'
    dest: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/purge_media.json'
    mode: '0660'

- name: Create 'Purge Media (Advanced)' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 2 - Purge Media (Advanced)"
    description: "Removes remote and local media that has accumilated on the server."
    extra_vars: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.json') }}"
    job_type: run
    job_tags: "purge-media"
    inventory: "{{ member_id }}"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: true
    survey_spec: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/purge_media.json') }}"
    state: present
    verbosity: 1
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Allow team to use 'Purge Media (Advanced)' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 2 - Purge Media (Advanced)"
    role: execute
    state: present
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Save initial 'Purge Database (Advanced)' survey.json to the AWX tower
  delegate_to: 127.0.0.1
  copy:
    src: './roles/modify-awx-account/surveys/purge_database.json'
    dest: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/purge_database.json'
    mode: '0660'

- name: Create 'Purge Database (Advanced)' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 2 - Purge Database (Advanced)"
    description: "Attempts to shrink the Synapse database, useful if the purge media tool isn't reclaiming enough space."
    extra_vars: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.json') }}"
    job_type: run
    job_tags: "purge-database"
    inventory: "{{ member_id }}"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: true
    survey_spec: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/purge_database.json') }}"
    state: present
    verbosity: 1
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Allow team to use 'Purge Database (Advanced)' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 2 - Purge Database (Advanced)"
    role: execute
    state: present
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Save new 'Bridge Discord AppService' survey.json to the AWX tower, template
  delegate_to: 127.0.0.1
  template:
    src: './roles/modify-awx-account/surveys/bridge_discord_appservice.json.j2'
    dest: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/bridge_discord_appservice.json'

- name: Copy 'Bridge Discord AppService' survey.json to target
  delegate_to: "{{ server_ip_final }}"
  copy:
    src: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/bridge_discord_appservice.json'
    dest: /matrix/awx/bridge_discord_appservice.json
    mode: '0660'

- name: Create 'Bridge Discord AppService' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 3 - Bridge Discord AppService"
    description: "Enables a private bridge you can use to connect Matrix rooms to Discord."
    extra_vars: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.json') }}"
    job_type: run
    job_tags: "start,setup-all,bridge-discord-appservice"
    inventory: "{{ member_id }}"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: true
    survey_spec: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/bridge_discord_appservice.json') }}"
    state: present
    verbosity: 1
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Allow team to use 'Bridge Discord AppService' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_role:
    team: "{{ member_id }}"
    job_template: "{{ matrix_domain }} - 3 - Bridge Discord AppService"
    role: execute
    state: present
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Create 'Rotate SSH Key' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 00 - Rotate SSH Key"
    description: "Loads the new public client key into the server."
    extra_vars: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.json') }}"
    job_type: run
    job_tags: "rotate-ssh"
    inventory: "{{ member_id }}"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    state: present
    verbosity: 1
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Create 'Upgrade Distribution' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 00 - Upgrade Distribution"
    description: "Upgrades a client server from Debian 10 to 11."
    extra_vars: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.json') }}"
    job_type: run
    job_tags: "upgrade-distro,setup-all,start"
    inventory: "{{ member_id }}"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    state: present
    verbosity: 1
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes

- name: Delete the AWX session token for executing modules
  delegate_to: 127.0.0.1
  awx.awx.tower_token:
    description: 'AWX Session Token'
    scope: "write"
    state: absent
    existing_token_id: "{{ awx_session_token.ansible_facts.tower_token.id }}"
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
